
// Use midi input to control display. Inspired by http://www.musanim.com.


// MIDI_IN = "MPK mini";
// MIDI_OUT = "loopMIDI Port 1";
// GS_MIDI_OUT = "Microsoft GS Wavetable Synth";



// Middle C is 60.
const int MIN_NOTE = 48; // C3
const int MAX_NOTE = 72; // C5

int[] _notes = new int[MAX_NOTE - MIN_NOTE + 1];
int _bcolor = 100;


public override void setup()
{
    print("setup()");

    size(600, 600);
    //colorMode(HSB, 360, 100, 100);
    colorMode(HSB, 100);
    //colorMode(RGB, 100);
    noStroke();
}

public override void draw()
{

    // for (int x = 0; x < 100; x++)
    // {
    //     for (int y = 0; y < 100; y++)
    //     {
    //         stroke(x, y, 100);
    //         point(x, y);
    //     }
    // }
    // return;




    background(_bcolor, 100, 100);

    int dy = height / (_notes.Count() + 1);

    for (int i = 0; i < _notes.Count(); i++)
    {
        if(_notes[i] > 0)
        {
            int y = i * dy;
            stroke(y, _notes[i], 100);
            strokeWeight(dy);
            line(10, y, width - 10, y);
            _notes[i]--;
        }
    }
}

public override void midiEvent(PMidiEvent evt)
{
    print(evt);

    if(evt.channel == 1)
    {
        if(evt.isNoteOn && evt.note >= MIN_NOTE && evt.note <= MAX_NOTE)
        {
            _notes[evt.note - MIN_NOTE] = evt.velocity;
            print("ON", evt.velocity);
        }
        // else if(evt.isNoteOff && evt.note >= MIN_NOTE && evt.note <= MAX_NOTE)
        // {
        //     _notes[evt.note - MIN_NOTE] = 0;
        //     print("OFF");
        // }
    }
}

public override void mouseClicked()
{
    _bcolor = (int)map(mouseX, 0, width, 0, 255);
    //redraw();
}

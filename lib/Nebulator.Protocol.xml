<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nebulator.Protocol</name>
    </assembly>
    <members>
        <member name="P:Nebulator.Protocol.ProtocolInputEventArgs.Step">
            <summary>Received data.</summary>
        </member>
        <member name="P:Nebulator.Protocol.ProtocolLogEventArgs.Category">
            <summary>Category.</summary>
        </member>
        <member name="P:Nebulator.Protocol.ProtocolLogEventArgs.Message">
            <summary>Text to log.</summary>
        </member>
        <member name="T:Nebulator.Protocol.ProtocolCaps">
            <summary>What it can do. Self explanatory.</summary>
        </member>
        <member name="T:Nebulator.Protocol.IProtocol">
            <summary>Abstraction layer between low level protocols (e.g. midi, OSC) and Nebulator steps.</summary>
        </member>
        <member name="E:Nebulator.Protocol.IProtocol.ProtocolInputEvent">
            <summary>Reporting a change to listeners.</summary>
        </member>
        <member name="E:Nebulator.Protocol.IProtocol.ProtocolLogEvent">
            <summary>Request for logging service.</summary>
        </member>
        <member name="P:Nebulator.Protocol.IProtocol.Caps">
            <summary>What it can do.</summary>
        </member>
        <member name="P:Nebulator.Protocol.IProtocol.ProtocolInputs">
            <summary>All available inputs for UI selection.</summary>
        </member>
        <member name="P:Nebulator.Protocol.IProtocol.ProtocolOutputs">
            <summary>All available outputs for UI selection.</summary>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Init">
            <summary>Initialize everything.</summary>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Start">
            <summary>Start listening for inputs.</summary>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Stop">
            <summary>Stop listening for inputs.</summary>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Housekeep">
            <summary>Background operations such as process any stop notes.</summary>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Send(Nebulator.Protocol.Step)">
            <summary>Protocol out processor.</summary>
            <param name="step"></param>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Kill(System.Nullable{System.Int32})">
            <summary>Kill one channel.</summary>
            <param name="channel">Specific channel or null for all.</param>
        </member>
        <member name="M:Nebulator.Protocol.IProtocol.Dispose">
            <summary>Clean up resources.</summary>
        </member>
        <member name="F:Nebulator.Protocol.ProtocolSettings._fn">
            <summary>The file name.</summary>
        </member>
        <member name="P:Nebulator.Protocol.ProtocolSettings.TheSettings">
            <summary>Current global user settings.</summary>
        </member>
        <member name="M:Nebulator.Protocol.ProtocolSettings.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Nebulator.Protocol.ProtocolSettings.Save">
            <summary>Save object to file.</summary>
        </member>
        <member name="M:Nebulator.Protocol.ProtocolSettings.Load(System.String)">
            <summary>Create object from file.</summary>
        </member>
        <member name="T:Nebulator.Protocol.Step">
            <summary>
            Base class for internal interface representation of a compiled event to be sent or received.
            </summary>
        </member>
        <member name="P:Nebulator.Protocol.Step.Channel">
            <summary>Channel.</summary>
        </member>
        <member name="M:Nebulator.Protocol.Step.Adjust(Nebulator.Protocol.ProtocolCaps,System.Int32,System.Int32)">
            <summary>Possibly make adjustments to values.</summary>
            <param name="caps">What it can do.</param>
            <param name="masterVolume"></param>
            <param name="channelVolume"></param>
        </member>
        <member name="M:Nebulator.Protocol.Step.ToString">
            <summary>For viewing pleasure.</summary>
        </member>
        <member name="T:Nebulator.Protocol.StepNoteOn">
            <summary>
            One note on.
            </summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOn.NoteNumber">
            <summary>The note to play.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOn.Velocity">
            <summary>The default volume.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOn.VelocityToPlay">
            <summary>The possibly modified Volume.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOn.Duration">
            <summary>Time between note on/off. Default of 0 indicates note off generated by owner.</summary>
        </member>
        <member name="M:Nebulator.Protocol.StepNoteOn.Adjust(Nebulator.Protocol.ProtocolCaps,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nebulator.Protocol.StepNoteOn.ToString">
            <summary>For viewing pleasure.</summary>
        </member>
        <member name="T:Nebulator.Protocol.StepNoteOff">
            <summary>
            One note off.
            </summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOff.NoteNumber">
            <summary>The note to stop.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOff.Velocity">
            <summary>Velocity.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepNoteOff.Expiry">
            <summary>When it's done in tocks - used by stop note chasing.</summary>
        </member>
        <member name="M:Nebulator.Protocol.StepNoteOff.Adjust(Nebulator.Protocol.ProtocolCaps,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nebulator.Protocol.StepNoteOff.ToString">
            <summary>For viewing pleasure.</summary>
        </member>
        <member name="T:Nebulator.Protocol.StepControllerChange">
            <summary>
            One control change event. This supports
              - standard CC messages
              - pitch (rather than have a separate type)
              - notes that can be used as control inputs
            </summary>
        </member>
        <member name="P:Nebulator.Protocol.StepControllerChange.ControllerId">
            <summary>Specific controller. See also specials in ControllerType.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepControllerChange.Value">
            <summary>The payload. CC value, pitch value, note number.</summary>
        </member>
        <member name="M:Nebulator.Protocol.StepControllerChange.ToString">
            <summary>For viewing pleasure.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepPatch.PatchNumber">
            <summary>Specific patch.</summary>
        </member>
        <member name="M:Nebulator.Protocol.StepPatch.ToString">
            <summary>For viewing pleasure.</summary>
        </member>
        <member name="T:Nebulator.Protocol.StepInternal">
            <summary>Used for internal things that are not actually comm protocol.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepInternal.ScriptFunction">
            <summary>A function to call.</summary>
        </member>
        <member name="M:Nebulator.Protocol.StepInternal.ToString">
            <summary>For viewing pleasure.</summary>
        </member>
        <member name="T:Nebulator.Protocol.StepCollection">
            <summary>A collection of Steps.</summary>
        </member>
        <member name="F:Nebulator.Protocol.StepCollection._steps">
            <summary>The main collection of Steps. The key is the time to send the list.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepCollection.Times">
            <summary>Gets a collection of the list.</summary>
        </member>
        <member name="P:Nebulator.Protocol.StepCollection.MaxTick">
            <summary>The duration of the whole thing.</summary>
        </member>
        <member name="M:Nebulator.Protocol.StepCollection.AddStep(Nebulator.Common.Time,Nebulator.Protocol.Step)">
            <summary>
            Add a step at the given time.
            </summary>
            <param name="time"></param>
            <param name="step"></param>
        </member>
        <member name="M:Nebulator.Protocol.StepCollection.Add(Nebulator.Protocol.StepCollection)">
            <summary>
            Concatenate another collection to this.
            </summary>
            <param name="stepsToAdd"></param>
        </member>
        <member name="M:Nebulator.Protocol.StepCollection.GetSteps(Nebulator.Common.Time)">
            <summary>
            Get the steps for the given time.
            </summary>
        </member>
        <member name="M:Nebulator.Protocol.StepCollection.DeleteSteps(Nebulator.Common.Time)">
            <summary>
            Delete the steps at the given time.
            </summary>
        </member>
        <member name="M:Nebulator.Protocol.StepCollection.Clear">
            <summary>
            Cleanse me.
            </summary>
        </member>
        <member name="M:Nebulator.Protocol.StepCollection.ToString">
            <summary>
            Display the content steps.
            </summary>
        </member>
    </members>
</doc>

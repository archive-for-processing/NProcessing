<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nebulator.Script</name>
    </assembly>
    <members>
        <member name="T:Nebulator.Script.ScriptError">
            <summary>General script error container.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptError.ErrorType">
            <summary>Where it came from.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptError.SourceFile">
            <summary>Original source file.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptError.LineNumber">
            <summary>Original source line number.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptError.Message">
            <summary>Content.</summary>
        </member>
        <member name="M:Nebulator.Script.ScriptError.ToString">
            <summary>Readable.</summary>
        </member>
        <member name="T:Nebulator.Script.NebCompiler">
            <summary>
            Parses/compiles *.np file(s).
            </summary>
        </member>
        <member name="T:Nebulator.Script.NebCompiler.FileContext">
            <summary>
            Parser helper class.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.FileContext.SourceFile">
            <summary>Current source file.</summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.FileContext.LineNumber">
            <summary>Current source line.</summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.FileContext.State">
            <summary>Current parse state.</summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.FileContext.CodeLines">
            <summary>Accumulated script code lines.</summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.Errors">
            <summary>Accumulated errors.</summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.SourceFiles">
            <summary>All active source files. Provided so client can monitor for external changes.</summary>
        </member>
        <member name="P:Nebulator.Script.NebCompiler.TempDir">
            <summary>Specifies the temp dir used so client can track down runtime errors.</summary>
        </member>
        <member name="F:Nebulator.Script.NebCompiler._logger">
            <summary>My logger.</summary>
        </member>
        <member name="F:Nebulator.Script.NebCompiler._baseDir">
            <summary>Starting directory.</summary>
        </member>
        <member name="F:Nebulator.Script.NebCompiler._scriptName">
            <summary>Script info.</summary>
        </member>
        <member name="F:Nebulator.Script.NebCompiler._initLines">
            <summary>Accumulated lines to go in the constructor.</summary>
        </member>
        <member name="F:Nebulator.Script.NebCompiler._filesToCompile">
            <summary>Products of file process. Key is generated file name.</summary>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.Execute(System.String)">
            <summary>
            Run the Compiler.
            </summary>
            <param name="npfn">Fully qualified path to topmost file.</param>
            <returns>The newly minted script object or null if failed.</returns>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.Parse(System.String)">
            <summary>
            Top level parser.
            </summary>
            <param name="npfn">Topmost file in collection.</param>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.ParseOneFile(Nebulator.Script.NebCompiler.FileContext)">
            <summary>
            Parse one file. This is recursive to support nested $load.
            </summary>
            <param name="pcont">The parse context.</param>
            <returns>True if a valid file.</returns>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.Compile">
            <summary>
            Top level compiler.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.GenMainFileContents">
            <summary>
            Create the file containing all the nebulator glue.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.GenDefFileContents">
            <summary>
            Create the file containing definitions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.GenTopOfFile(System.String)">
            <summary>
            Create the boilerplate file top stuff.
            </summary>
            <param name="fn">Source file name. Empty means it's an internal file.</param>
            <returns></returns>
        </member>
        <member name="M:Nebulator.Script.NebCompiler.GenBottomOfFile">
            <summary>
            Create the boilerplate file bottom stuff.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nebulator.Script.ChannelState">
            <summary>Channel state.</summary>
        </member>
        <member name="T:Nebulator.Script.NVariable">
            <summary>
            One bound variable.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NVariable.Name">
            <summary>Variable name - as shown in ui.</summary>
        </member>
        <member name="P:Nebulator.Script.NVariable.Value">
            <summary>Value as int. It is initialized from the script supplied value.</summary>
        </member>
        <member name="P:Nebulator.Script.NVariable.Min">
            <summary>Min value - optional.</summary>
        </member>
        <member name="P:Nebulator.Script.NVariable.Max">
            <summary>Max value - optional.</summary>
        </member>
        <member name="F:Nebulator.Script.NVariable.Changed">
            <summary>Notify with new value.</summary>
        </member>
        <member name="M:Nebulator.Script.NVariable.ToString">
            <summary>
            For viewing pleasure.
            </summary>
        </member>
        <member name="T:Nebulator.Script.NControlPoint">
            <summary>
            Defines a controller input.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NControlPoint.Channel">
            <summary>Associated channel.</summary>
        </member>
        <member name="P:Nebulator.Script.NControlPoint.ControllerId">
            <summary>The numerical (midi) controller type.</summary>
        </member>
        <member name="P:Nebulator.Script.NControlPoint.BoundVar">
            <summary>The bound var.</summary>
        </member>
        <member name="M:Nebulator.Script.NControlPoint.ToString">
            <summary>
            For viewing pleasure.
            </summary>
        </member>
        <member name="T:Nebulator.Script.NChannel">
            <summary>
            One instrument.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.Name">
            <summary>The UI name for this channel.</summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.Channel">
            <summary>The numerical (midi) channel to use: 1 - 16.</summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.Volume">
            <summary>Current volume.</summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.WobbleVolume">
            <summary>Humanize factor for volume.</summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.WobbleTimeBefore">
            <summary>Humanize factor for time - before the tock.</summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.WobbleTimeAfter">
            <summary>Humanize factor for time - after the tock.</summary>
        </member>
        <member name="P:Nebulator.Script.NChannel.State">
            <summary>Current state for this channel.</summary>
        </member>
        <member name="F:Nebulator.Script.NChannel._timeWobbler">
            <summary>Wobbler for time.</summary>
        </member>
        <member name="F:Nebulator.Script.NChannel._volWobbler">
            <summary>Wobbler for volume.</summary>
        </member>
        <member name="M:Nebulator.Script.NChannel.NextTime">
            <summary>
            Get the next time.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nebulator.Script.NChannel.NextVol(System.Int32)">
            <summary>
            Get the next volume.
            </summary>
            <param name="def"></param>
            <returns></returns>
        </member>
        <member name="M:Nebulator.Script.NChannel.ToString">
            <summary>
            For viewing pleasure.
            </summary>
        </member>
        <member name="T:Nebulator.Script.NSection">
            <summary>
            One top level section.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NSection.Name">
            <summary>The name for this section.</summary>
        </member>
        <member name="P:Nebulator.Script.NSection.Start">
            <summary>Start Tick.</summary>
        </member>
        <member name="P:Nebulator.Script.NSection.Length">
            <summary>Length in Ticks.</summary>
        </member>
        <member name="P:Nebulator.Script.NSection.SectionChannels">
            <summary>Contained channel info.</summary>
        </member>
        <member name="M:Nebulator.Script.NSection.Add(Nebulator.Script.NChannel,Nebulator.Script.NSequence[])">
            <summary>
            Script callable function.
            </summary>
            <param name="channel"></param>
            <param name="seqs"></param>
        </member>
        <member name="T:Nebulator.Script.NSectionChannel">
            <summary>
            One row in the Section. Describes the sequences associated with a channel in the section.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NSectionChannel.ParentChannel">
            <summary>The owner channel.</summary>
        </member>
        <member name="P:Nebulator.Script.NSectionChannel.Sequences">
            <summary>The associated Sequences.</summary>
        </member>
        <member name="T:Nebulator.Script.NSequence">
            <summary>
            One sequence definition in the composition.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NSequence.Elements">
            <summary>List of notes or other elements.</summary>
        </member>
        <member name="P:Nebulator.Script.NSequence.Length">
            <summary>Length in ticks.</summary>
        </member>
        <member name="M:Nebulator.Script.NSequence.Add(System.Double,System.String,System.Int32,System.Double)">
            <summary>
            Z.Add(00.00, "G3", 90, 0.60);
            </summary>
            <param name="when"></param>
            <param name="what"></param>
            <param name="volume"></param>
            <param name="duration"></param>
        </member>
        <member name="M:Nebulator.Script.NSequence.Add(System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Z.Add(00.00, 66, 90, 0.60);
            Z.Add(00.00, CrashCymbal1, 90, 0.60);
            </summary>
            <param name="when"></param>
            <param name="what"></param>
            <param name="volume"></param>
            <param name="duration"></param>
        </member>
        <member name="M:Nebulator.Script.NSequence.Add(System.Double,System.Action,System.Int32)">
            <summary>
            Z.Add(01.00, algoDynamic, 90);
            </summary>
            <param name="when"></param>
            <param name="func"></param>
            <param name="volume"></param>
        </member>
        <member name="M:Nebulator.Script.NSequence.Add(System.String,System.Int32,System.Int32,System.Double)">
            <summary>
            Z.Add("x-------x-------x-------x-------", AcousticBassDrum, 90);
            Each hit is 1/16 note - fixed res for now.
            </summary>
            <param name="pattern"></param>
            <param name="which"></param>
            <param name="volume"></param>
            <param name="duration"></param>
        </member>
        <member name="M:Nebulator.Script.NSequence.ToString">
            <summary>
            For viewing pleasure.
            </summary>
        </member>
        <member name="T:Nebulator.Script.NSequenceElement">
            <summary>
            One note or chord or script function etc in the sequence. Essentially something that gets played.
            </summary>
        </member>
        <member name="P:Nebulator.Script.NSequenceElement.Volume">
            <summary>Individual note volume.</summary>
        </member>
        <member name="P:Nebulator.Script.NSequenceElement.When">
            <summary>When to play in Sequence.</summary>
        </member>
        <member name="P:Nebulator.Script.NSequenceElement.Duration">
            <summary>Time between note on/off. 0 (default) means not used.</summary>
        </member>
        <member name="P:Nebulator.Script.NSequenceElement.Notes">
            <summary>The 0th is the root note and other values comprise possible chord notes.</summary>
        </member>
        <member name="P:Nebulator.Script.NSequenceElement.ScriptFunction">
            <summary>Call a script function.</summary>
        </member>
        <member name="M:Nebulator.Script.NSequenceElement.#ctor(System.String)">
            <summary>
            Constructor that parses note string.
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Nebulator.Script.NSequenceElement.#ctor(System.Int32)">
            <summary>
            Constructor from note number.
            </summary>
        </member>
        <member name="M:Nebulator.Script.NSequenceElement.#ctor(System.Action)">
            <summary>
            Constructor from function.
            </summary>
        </member>
        <member name="M:Nebulator.Script.NSequenceElement.#ctor(Nebulator.Script.NSequenceElement)">
            <summary>
            Copy constructor.
            </summary>
        </member>
        <member name="M:Nebulator.Script.NSequenceElement.ToString">
            <summary>
            For viewing pleasure.
            </summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.playing">
            <summary>Sound is playing.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.stepTime">
            <summary>Current Nebulator step time.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.tick">
            <summary>Current Nebulator Tick.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.tock">
            <summary>Current Nebulator Tock.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.now">
            <summary>Actual time since start pressed.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.tocksPerTick">
            <summary>Tock subdivision.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.speed">
            <summary>Nebulator Speed in Ticks per minute (aka bpm).</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.volume">
            <summary>Nebulator master Volume.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.winGm">
            <summary>Indicates using internal synth.</summary>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.setupNeb">
            <summary>Called to iniialize Nebulator stuff.</summary>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.step">
            <summary>Called every Nebulator Tock.</summary>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createControllerIn(Nebulator.Script.NChannel,System.Int32,Nebulator.Script.NVariable)">
            <summary>
            Create a controller input.
            </summary>
            <param name="channel">Associated channel.</param>
            <param name="controlId">Which</param>
            <param name="bound">NVariable</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createLever(Nebulator.Script.NVariable)">
            <summary>
            Create a UI lever.
            </summary>
            <param name="bound"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createVariable(System.String,System.Int32,System.Int32,System.Int32,System.Action)">
            <summary>
            Normal factory.
            </summary>
            <param name="name">UI name</param>
            <param name="val">Initial value</param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="handler">Optional callback</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createSequence(System.Int32)">
            <summary>
            Normal constructor.
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createSection(System.String,System.Int32,System.Int32)">
            <summary>
            Normal factory.
            </summary>
            <param name="name"></param>
            <param name="start"></param>
            <param name="length"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createChannel(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Normal factory.
            </summary>
            <param name="name"></param>
            <param name="channel"></param>
            <param name="wobvol"></param>
            <param name="wobbefore"></param>
            <param name="wobafter"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendNote(Nebulator.Script.NChannel,System.Int32,System.Int32,System.Double)">
            <summary>Send a note immediately. Respects solo/mute. Adds a note off to play after dur time.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="inote">Note number.</param>
            <param name="vol">Note volume. If 0, sends NoteOff instead.</param>
            <param name="dur">How long it lasts in Time. 0 means no note off generated. User has to turn it off explicitly.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendNote(Nebulator.Script.NChannel,System.String,System.Int32,System.Double)">
            <summary>Send a note immediately. Respects solo/mute.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="snote">Note string using any form allowed in the script. Requires double quotes in the script.</param>
            <param name="vol">Note volume.</param>
            <param name="dur">How long it lasts in Time representation. 0 means no note off generated.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendNote(Nebulator.Script.NChannel,System.String,System.Int32,Nebulator.Comm.Time)">
            <summary>Send a note immediately. Respects solo/mute.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="snote">Note string using any form allowed in the script. Requires double quotes in the script.</param>
            <param name="vol">Note volume.</param>
            <param name="dur">How long it lasts in Time representation. 0 means no note off generated.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendNoteOn(Nebulator.Script.NChannel,System.Int32,System.Int32)">
            <summary>Send a note on immediately. Respects solo/mute.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="inote">Note number.</param>
            <param name="vol">Note volume.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendNoteOff(Nebulator.Script.NChannel,System.Int32)">
            <summary>Send a note off.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="inote">Note number.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendController(Nebulator.Script.NChannel,System.Int32,System.Int32)">
            <summary>Send a controller immediately.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="ctlnum">Controller number.</param>
            <param name="val">Controller value.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.sendPatch(Nebulator.Script.NChannel,System.Int32)">
            <summary>Send a midi patch immediately.</summary>
            <param name="channel"></param>
            <param name="patch"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.playSequence(Nebulator.Script.NChannel,Nebulator.Script.NSequence)">
            <summary>Send a named sequence.</summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="seq">Which sequence to send.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.createNotes(System.String,System.String)">
            <summary>
            Add a chord or scale definition.
            </summary>
            <param name="name">"MY_CHORD"</param>
            <param name="parts">"1 4 6 b13"</param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.getNotes(System.String)">
            <summary>Convert the argument into numbered notes.</summary>
            <param name="note">Note string using any form allowed in the script.</param>
            <returns>Array of notes or empty if invalid.</returns>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.getScaleNotes(System.String,System.String)">
            <summary>Get an array of scale notes.</summary>
            <param name="scale">One of the named scales from ScriptDefinitions.md.</param>
            <param name="key">Note name and octave.</param>
            <returns>Array of notes or empty if invalid.</returns>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._logger">
            <summary>My logger.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._disposed">
            <summary>Resource clean up.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._rand">
            <summary>Script randomizer.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._loop">
            <summary>Loop option.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._redraw">
            <summary>Redraw option.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._canvas">
            <summary>Current working object to draw on.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._textPaint">
            <summary>Current font to draw with.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._pen">
            <summary>Current pen to draw with.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._fill">
            <summary>Current brush to draw with.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._vertexes">
            <summary>Current drawing points.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._matrixStack">
            <summary>General purpose stack</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._bgColor">
            <summary>Background color.</summary>
        </member>
        <member name="F:Nebulator.Script.ScriptCore._smooth">
            <summary>Smoothing option.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Comm">
            <summary>Device to use.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.StepTime">
            <summary>Main -> Script</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Playing">
            <summary>Main -> Script</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.RealTime">
            <summary>Main -> Script</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Speed">
            <summary>Main -> Script -> Main</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Volume">
            <summary>Main -> Script -> Main</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.FrameRate">
            <summary>Main -> Script -> Main</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.RuntimeSteps">
            <summary>Steps added by script functions at runtime e.g. playSequence(). Script -> Main</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.InputControllers">
            <summary>Control inputs.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Levers">
            <summary>Levers.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Variables">
            <summary>Levers.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Sequences">
            <summary>All sequences.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Sections">
            <summary>All sections.</summary>
        </member>
        <member name="P:Nebulator.Script.ScriptCore.Channels">
            <summary>All channels.</summary>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.Dispose">
            <summary>
            Resource clean up.
            </summary>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.Dispose(System.Boolean)">
            <summary>
            Resource clean up.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.NotImpl(System.String,System.String)">
            <summary>Handle unimplemented script elements that we can safely ignore but do tell the user.</summary>
            <param name="name"></param>
            <param name="desc"></param>
        </member>
        <member name="M:Nebulator.Script.ScriptCore.SafeColor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Bounds check a color definition./// </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="T:Nebulator.Script.color">
            <summary>
            Map Processing color to native. Processing uses a 32 bit value as color - this uses a class.
            Note that .NET calls it HSV but is actually HSL so you shouldn't use the Color.GetXXX() functions.
            https://blogs.msdn.microsoft.com/cjacks/2006/04/12/converting-from-hsb-to-rgb-in-net/
            </summary>
        </member>
        <member name="F:Nebulator.Script.color._mode">
            <summary>Color mode: RGB or HSB, corresponding to Red/Green/Blue and Hue/Saturation/Brightness.</summary>
        </member>
        <member name="F:Nebulator.Script.color._max1">
            <summary>Range for the red or hue depending on the current color mode.</summary>
        </member>
        <member name="F:Nebulator.Script.color._max2">
            <summary>Range for the green or saturation depending on the current color mode.</summary>
        </member>
        <member name="F:Nebulator.Script.color._max3">
            <summary>Range for the blue or brightness depending on the current color mode.</summary>
        </member>
        <member name="F:Nebulator.Script.color._maxA">
            <summary>Range for the alpha channel.</summary>
        </member>
        <member name="T:Nebulator.Script.PImage">
            <summary>
            Map Processing PImage class to native.
            </summary>
        </member>
        <member name="T:Nebulator.Script.PFont">
            <summary>
            Map Processing PFont class to native.
            </summary>
        </member>
        <member name="T:Nebulator.Script.Event">
            <summary>
            Port of Processing java class.
            </summary>
        </member>
        <member name="T:Nebulator.Script.MouseEvent">
            <summary>
            Port of Processing java class.
            </summary>
        </member>
        <member name="T:Nebulator.Script.PVector">
            <summary>
            A port of the Processing PVector class.
            </summary>
        </member>
        <member name="M:Nebulator.Script.ScriptUtils.ConvertToSteps(Nebulator.Script.NChannel,Nebulator.Script.NSequence,System.Int32)">
            <summary>
            Generate steps from sequence notes.
            </summary>
            <param name="channel">Which channel to send it on.</param>
            <param name="seq">Which notes to send.</param>
            <param name="startTick">Which tick to start at.</param>
        </member>
        <member name="M:Nebulator.Script.ScriptUtils.ProcessScriptRuntimeError(Nebulator.Script.Surface.RuntimeErrorEventArgs,System.String)">
            <summary>
            Runtime error. Look for ones generated by our script - normal occurrence which the user should know about.
            </summary>
            <param name="args"></param>
            <param name="compileDir"></param>
        </member>
        <member name="E:Nebulator.Script.Surface.RuntimeErrorEvent">
            <summary>Reports a runtime error to listeners.</summary>
        </member>
        <member name="F:Nebulator.Script.Surface._logger">
            <summary>My logger.</summary>
        </member>
        <member name="F:Nebulator.Script.Surface._skcontrol">
            <summary>The embedded drawing control.</summary>
        </member>
        <member name="F:Nebulator.Script.Surface._script">
            <summary>The current script.</summary>
        </member>
        <member name="F:Nebulator.Script.Surface._bitmap">
            <summary>Rendered bitmap for display when painting.</summary>
        </member>
        <member name="F:Nebulator.Script.Surface._tanDraw">
            <summary>For metrics.</summary>
        </member>
        <member name="M:Nebulator.Script.Surface.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Nebulator.Script.Surface.Surface_Load(System.Object,System.EventArgs)">
            <summary>
            Initialize form controls.
            </summary>
        </member>
        <member name="M:Nebulator.Script.Surface.InitSurface(Nebulator.Script.ScriptCore)">
            <summary>
            Update per new script object.
            </summary>
            <param name="script"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.UpdateSurface">
            <summary>
            Redraw if it's time and enabled.
            </summary>
        </member>
        <member name="M:Nebulator.Script.Surface.Render">
            <summary>
            Calls the script code that generates the bmp to paint later.
            </summary>
        </member>
        <member name="M:Nebulator.Script.Surface.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Renders the stored bitmap to the UI.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseEnter(System.EventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnMouseLeave(System.EventArgs)">
            <summary>
            Event handler.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.ProcessMouseEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Common routine to update mouse stuff.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Event handler for keys.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Event handler for keys.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Event handler for keys.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Nebulator.Script.Surface.ProcessKeys(System.ValueTuple{System.Char,System.Collections.Generic.List{System.Windows.Forms.Keys}})">
            <summary>
            Convert generic utility output to flavor that Processing understands.
            </summary>
            <param name="keys"></param>
        </member>
        <member name="F:Nebulator.Script.Surface.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Nebulator.Script.Surface.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Nebulator.Script.Surface.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Nebulator.Script.Wobbler">
            <summary>
            Statistical randomizer for time and volume.
            </summary>
        </member>
        <member name="F:Nebulator.Script.Wobbler._rand">
            <summary>Randomizer.</summary>
        </member>
        <member name="P:Nebulator.Script.Wobbler.RangeLow">
            <summary>Minimum range for randomizing - 3 sigma.</summary>
        </member>
        <member name="P:Nebulator.Script.Wobbler.RangeHigh">
            <summary>Maximum range for randomizing - 3 sigma.</summary>
        </member>
        <member name="M:Nebulator.Script.Wobbler.Next(System.Int32)">
            <summary>
            Return next from standard distribution.
            </summary>
            <param name="val">Center distribution around this.</param>
            <returns>Randomized value or val if ranges are 0 (default).</returns>
        </member>
        <member name="M:Nebulator.Script.Wobbler.Next(Nebulator.Comm.Time)">
            <summary>
            Return next from standard distribution.
            </summary>
            <param name="val">Center distribution around this.</param>
            <returns>Randomized value or val if Min/Max are 0.</returns>
        </member>
    </members>
</doc>
